"""
Project Euler

Problem 2
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
"""

import time

fibonacci_list = [1]
sum_of_fibonacci = 0

t0 = time.time()
for i, e in enumerate(fibonacci_list):
    fibonacci_list.append(fibonacci_list[i] + fibonacci_list[i - 1])  # O(n)
    if e % 2 == 0:
        sum_of_fibonacci = sum_of_fibonacci + e

    if 4000000 < e:
        break
t1 = time.time()
print(t1 - t0)

print(sum_of_fibonacci)
